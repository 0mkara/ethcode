syntax = "proto3";

package eth_client_call;
option go_package = "eth_client_call";

message ClientCallInterface {
    string command = 1;
    string payload = 2;
}

message ClientCallRequest {
    ClientCallInterface callInterface = 1;
}

message ClientCallResponse {
    string result = 1;
}


message CreateRawTransactionReq {
    string req = 1;   
}

message CreateRawTransactionResp {
    string rawTX = 1;
}

message DeploySignedTransactionReq{
    string signedTX = 1;
}

message DeploySignedTransactionResp {
    string txReciept = 1;
}

service ClientCallService {
    rpc RunDeploy(ClientCallRequest) returns (stream ClientCallResponse) {};
    rpc CreateRawTransaction(CreateRawTransactionReq) returns (CreateRawTransactionResp) {};
    rpc DeploySignedTransaction(DeploySignedTransactionReq) returns (DeploySignedTransactionResp) {};
}